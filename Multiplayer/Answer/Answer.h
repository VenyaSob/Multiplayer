
#ifndef MULTIPLAYER_ANSWER_H
#define MULTIPLAYER_ANSWER_H


////////////////////////////////////////////////////
// Headers			    					      //
////////////////////////////////////////////////////
												  //
#include "../../Multiplayer/Message/Message.h"	  //
												  //
#include <windows.h>							  //
#include <string>								  //
												  //
////////////////////////////////////////////////////


namespace mp
{
	struct Answer
	{
		///////////////////////////////////////////////
		// Data type								 //
		///////////////////////////////////////////////

		enum Type
		{	
			None,
			Success,
			Error
		};


		///////////////////////////////////////////////
		// Member data 								 //
		///////////////////////////////////////////////

		Type type = None;
		std::string error_message;
	

		///////////////////////////////////////////////
		// Constructors								 //
		///////////////////////////////////////////////

		Answer();

		Answer(Type type);

		Answer(std::string error_message);
		

		///////////////////////////////////////////////
		// Method	 								 //
		///////////////////////////////////////////////

		void Clear();
	};


	///////////////////////////////////////////////
	// Global operator overloading		         //
	///////////////////////////////////////////////
		
	Message& operator <<(Message& message, Answer answer);

	Message& operator >>(Message& message, Answer& answer);

} // namespace mp



#endif // MULTIPLAYER_ANSWER_H